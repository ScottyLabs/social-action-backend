{"ast":null,"code":"import _slicedToArray from\"/Users/anushkasaxena/Apps/School/scottylabs/social-action-backend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useTable,useFilters,useSortBy}from\"react-table\";export default function Table(_ref){var columns=_ref.columns,data=_ref.data;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),filterInput=_useState2[0],setFilterInput=_useState2[1];// Use the state and functions returned from useTable to build your UI\nvar _useTable=useTable({columns:columns,data:data},useFilters,useSortBy),getTableProps=_useTable.getTableProps,getTableBodyProps=_useTable.getTableBodyProps,headerGroups=_useTable.headerGroups,rows=_useTable.rows,prepareRow=_useTable.prepareRow,setFilter=_useTable.setFilter;var handleFilterChange=function handleFilterChange(e){var value=e.target.value||undefined;setFilter(\"firm_name\",value);setFilterInput(value);};// Render the UI for your table\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"input\",{value:filterInput,onChange:handleFilterChange,placeholder:\"Search name\"}),/*#__PURE__*/React.createElement(\"table\",getTableProps(),/*#__PURE__*/React.createElement(\"thead\",null,headerGroups.map(function(headerGroup){return/*#__PURE__*/React.createElement(\"tr\",headerGroup.getHeaderGroupProps(),headerGroup.headers.map(function(column){return/*#__PURE__*/React.createElement(\"th\",Object.assign({},column.getHeaderProps(column.getSortByToggleProps()),{className:column.isSorted?column.isSortedDesc?\"sort-desc\":\"sort-asc\":\"\"}),column.render(\"Header\"));}));})),/*#__PURE__*/React.createElement(\"tbody\",getTableBodyProps(),rows.map(function(row,i){prepareRow(row);return/*#__PURE__*/React.createElement(\"tr\",row.getRowProps(),row.cells.map(function(cell){return/*#__PURE__*/React.createElement(\"td\",cell.getCellProps(),cell.render(\"Cell\"));}));}))));}","map":{"version":3,"sources":["/Users/anushkasaxena/Apps/School/scottylabs/social-action-backend/client/src/Table.js"],"names":["React","useState","useTable","useFilters","useSortBy","Table","columns","data","filterInput","setFilterInput","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","handleFilterChange","e","value","target","undefined","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"+LAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,CAAmBC,UAAnB,CAA+BC,SAA/B,KAAgD,aAAhD,CAGA,cAAe,SAASC,CAAAA,KAAT,MAAkC,IAAjBC,CAAAA,OAAiB,MAAjBA,OAAiB,CAARC,IAAQ,MAARA,IAAQ,CAE/C,cAAsCN,QAAQ,CAAC,EAAD,CAA9C,wCAAOO,WAAP,eAAoBC,cAApB,eACA;AACA,cAOIP,QAAQ,CACV,CACEI,OAAO,CAAPA,OADF,CAEEC,IAAI,CAAJA,IAFF,CADU,CAKVJ,UALU,CAMVC,SANU,CAPZ,CACEM,aADF,WACEA,aADF,CAEEC,iBAFF,WAEEA,iBAFF,CAGEC,YAHF,WAGEA,YAHF,CAIEC,IAJF,WAIEA,IAJF,CAKEC,UALF,WAKEA,UALF,CAMEC,SANF,WAMEA,SANF,CAgBA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,CAAC,CAAI,CAC9B,GAAMC,CAAAA,KAAK,CAAGD,CAAC,CAACE,MAAF,CAASD,KAAT,EAAkBE,SAAhC,CACAL,SAAS,CAAC,WAAD,CAAcG,KAAd,CAAT,CACAT,cAAc,CAACS,KAAD,CAAd,CACD,CAJD,CAMA;AACA,mBACE,qDACE,6BACE,KAAK,CAAEV,WADT,CAEE,QAAQ,CAAEQ,kBAFZ,CAGE,WAAW,CAAE,aAHf,EADF,cAME,4BAAWN,aAAa,EAAxB,cACE,iCACGE,YAAY,CAACS,GAAb,CAAiB,SAAAC,WAAW,qBAC3B,yBAAQA,WAAW,CAACC,mBAAZ,EAAR,CACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwB,SAAAI,MAAM,qBAC7B,0CACMA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CADN,EAEE,SAAS,CACPF,MAAM,CAACG,QAAP,CACIH,MAAM,CAACI,YAAP,CACE,WADF,CAEE,UAHN,CAII,EAPR,GAUGJ,MAAM,CAACK,MAAP,CAAc,QAAd,CAVH,CAD6B,EAA9B,CADH,CAD2B,EAA5B,CADH,CADF,cAqBE,4BAAWnB,iBAAiB,EAA5B,CACGE,IAAI,CAACQ,GAAL,CAAS,SAACU,GAAD,CAAMC,CAAN,CAAY,CACpBlB,UAAU,CAACiB,GAAD,CAAV,CACA,mBACE,yBAAQA,GAAG,CAACE,WAAJ,EAAR,CACGF,GAAG,CAACG,KAAJ,CAAUb,GAAV,CAAc,SAAAc,IAAI,CAAI,CACrB,mBACE,yBAAQA,IAAI,CAACC,YAAL,EAAR,CAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ,CAA9B,CADF,CAGD,CAJA,CADH,CADF,CASD,CAXA,CADH,CArBF,CANF,CADF,CA6CD","sourcesContent":["import React, { useState } from \"react\";\nimport { useTable, useFilters, useSortBy } from \"react-table\";\n\n\nexport default function Table({ columns, data }) {\n  \n  const [filterInput, setFilterInput] = useState(\"\");\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useFilters,\n    useSortBy\n  );\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"firm_name\", value);\n    setFilterInput(value);\n  };\n\n  // Render the UI for your table\n  return (\n    <>\n      <input\n        value={filterInput}\n        onChange={handleFilterChange}\n        placeholder={\"Search name\"}\n      />\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={\n                    column.isSorted\n                      ? column.isSortedDesc\n                        ? \"sort-desc\"\n                        : \"sort-asc\"\n                      : \"\"\n                  }\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}